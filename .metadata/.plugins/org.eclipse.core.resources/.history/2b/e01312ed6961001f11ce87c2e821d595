package Methods;

import static io.restassured.RestAssured.given;
import org.junit.Before;
import org.junit.Test;
import io.restassured.response.Response;
import static org.junit.Assert.assertEquals;

public class TestDemoQA {

    private Response response;
    private String token;
    private String userID;

    @Before
    public void setup() {
        criarUsuario();
        gerarTokenAcesso();
    }

    // Este método faz uma requisição POST para criar um novo usuário na API.
    public void criarUsuario() {
        response = given().log().all()
                .contentType("application/json")
                .body("{\r\n" + 
                      "  \"userName\": \"AndreaElianeStellaMoreira\",\r\n" +
                      "  \"password\": \"Senha123!\"\r\n" + 
                      "}")
                .when()
                .post("https://demoqa.com/Account/v1/User")
                .then().log().all().extract().response();

        assertEquals(201, response.statusCode());
        userID = response.jsonPath().getString("userID");
        System.out.println("User ID: " + userID);
    }

    // Este método faz uma requisição POST para gerar um token de acesso para o usuário criado.
    public void gerarTokenAcesso() {
        response = given().log().all()
                .contentType("application/json")
                .body("{\r\n" + 
                      "  \"userName\": \"AndreaElianeStellaMoreira\",\r\n" + 
                      "  \"password\": \"Senha123!\"\r\n" + 
                      "}")
                .when()
                .post("https://demoqa.com/Account/v1/GenerateToken")
                .then().log().all().extract().response();

        assertEquals(200, response.statusCode());
        token = response.jsonPath().getString("token");
        System.out.println("Token: " + token);
    }

    // Este método faz uma requisição POST para verificar se o usuário está autorizado com o token gerado.
    @Test
    public void confirmarAutorizacao() {
        response = given().log().all()
                .contentType("application/json")
                .header("Authorization", "Bearer " + token)
                .when()
                .post("https://demoqa.com/Account/v1/Authorized")
                .then().log().all().extract().response();

        assertEquals(200, response.statusCode());
        System.out.println("Autorização Confirmada: " + (response.statusCode() == 200));
    }

    // Este método faz uma requisição GET para listar todos os livros disponíveis na API.
    @Test
    public void listarLivros() {
        response = given().log().all()
                .when()
                .get("https://demoqa.com/Bookstore/v1/Books")
                .then().log().all().extract().response();

        assertEquals(200, response.statusCode());
        System.out.println("Lista de Livros: " + response.asString());
    }

    // Este método faz uma requisição POST para alugar livros.
    @Test
    public void alugarLivros() {
        String payload = "{\r\n" +
                         "  \"userId\": \"" + userID + "\",\r\n" +
                         "  \"collectionOfIsbns\": [\r\n" +
                         "    { \"isbn\": \"9781449331818\" },\r\n" +
                         "    { \"isbn\": \"9781491904244\" }\r\n" +
                         "  ]\r\n" +
                         "}";

        response = given().log().all()
                .contentType("application/json")
                .header("Authorization", "Bearer " + token)
                .body(payload)
                .when()
                .post("https://demoqa.com/Bookstore/v1/Books")
                .then().log().all().extract().response();

        assertEquals(201, response.statusCode());
        System.out.println("Livros Alugados: " + response.asString());
    }
}
